library(help = 'datasets')
data("longley")
head(longley)
```{r}
head(longley)
new_dt <- subset(longley, select = c(Employed, GNP))
new_dt
fit <- lm(Employed~GNP, data = longley)
summary(fit)
install.packages("predict3d")
library(predict3d)
ggPredict(fit)
summary(fit)
ggPredict(fit, xpos = 0.75, vjust = 1.5, show.error = TRUE)
fit1 <- lm(Employed~GNP+Population, data = longley)
summary(fit1)
##melihat prediksi
ggPredict(fit1)
ggPredict(fit1)
ggPredict(fit1)
head(PimaIndiansDiabetes)
install.packages("mlbench")
library(mlbench)
library(mlbench)
head(PimaIndiansDiabetes)
head(PimaIndiansDiabetes)
library(help= mlbench)
head(PimaIndiansDiabetes)
data(PimaIndiansDiabetes)
head(data)
head(PimaIndiansDiabetes)
new_dt <- subset(PimaIndiansDiabetes, select = c(mass, glucose))
new_dt
fit <- lm(mass~glucose, data = PimaIndiansDiabetes)
summary(fit)
library(predict3d)
library(predict3d)
ggPredict(fit)
new_dt <- subset(PimaIndiansDiabetes, select = c(mass, pedigree))
new_dt
new_dt <- subset(PimaIndiansDiabetes, select = c(mass, pedigree))
new_dt
##fitting dataset yang telah dipilih
```{r}
fit <- lm(mass~glucose, data = PimaIndiansDiabetes)
summary(fit)
```
library(predict3d)
ggPredict(fit)
fit <- lm(mass~pedigree, data = PimaIndiansDiabetes)
summary(fit)
library(predict3d)
ggPredict(fit)
ggPredict(fit1, show.error = TRUE, facet.modx = TRUE)
new_dt <- subset(PimaIndiansDiabetes, select = c(glucose, mass, diabetes))
new_dt
fit <- glm(formula = diabetes-glucose, data = PimaIndiansDiabetes, family = bionomial)
fit <- glm(formula = diabetes-glucose, data = PimaIndiansDiabetes, family = binomial)
new_dt <- subset(PimaIndiansDiabetes, select = c(glucose, mass, diabetes))
new_dt
new_dt <- subset(PimaIndiansDiabetes, select = c(glucose, mass, diabetes))
new_dt
fit <- glm(formula = diabetes-glucose, data = PimaIndiansDiabetes, family = binomial)
install.packages("mlbench")
install.packages("mlbench")
library(help= mlbench)
install.packages("mlbench")
data(PimaIndiansDiabetes)
head(PimaIndiansDiabetes)
new_dt <- subset(PimaIndiansDiabetes, select = c(glucose, mass, diabetes))
new_dt
fit <- glm(formula = diabetes-glucose, data = PimaIndiansDiabetes, family = binomial)
fit <- glm(formula = diabetes~glucose, data = PimaIndiansDiabetes, family = binomial)
summary(fit)
install.packages("ggplot2")
library(ggplot2)
ggplot(new_dt, aes(x= glucose, y= diabetes)) + geom_point() + stat_smooth(method = "glm", method.args = list(family = "binomial"), se = FALSE)
PimaIndiansDiabetes$diabetes = ifelse(PimaIndiansDiabetes$glucose>=120,"1","0")
new_dt <- subset(PimaIndiansDiabetes, select = c(glucose, mass, diabetes))
new_dt
fit <- glm(formula = diabetes~glucose, data = PimaIndiansDiabetes, family = binomial)
PimaIndiansDiabetes$diabetes = ifelse(PimaIndiansDiabetes$glucose>=120,"1","0")
new_dt <- subset(PimaIndiansDiabetes, select = c(glucose, mass, diabetes))
new_dt
fit <- glm(formula = diabetes~glucose, data = new_dt, family = binomial)
data(Soybean)
library(mlbench)
data(Soybean)
head(Soybean)
head(Soybean)
dt <- subset(Soybean, select = c(date, PlantGrowth, germ))
dt <- subset(Soybean, select = c(date, PlantGrowth, germ))
dt <- subset(Soybean, select = c(date, PlantGrowth))
dt <- subset(Soybean, select = c(date))
dt <- subset(Soybean, select = c(date, PlantGrowth))
dt <- subset(Soybean, select = c(date, plant.growth, germ))
dt
fit < glm(formula = plan.growth~germ, data = Soybean, family = binomial)
fit < glm(formula = plant.growth~germ, data = Soybean, family = binomial)
data <- read.csv(D:\Riko\Semester 3\FSD\Linier,Logistic,Naive Bayes/ramen-ratings.csv)
data <- read.csv("D:\Riko\Semester 3\FSD\Linier,Logistic,Naive Bayes/ramen-ratings.csv")
data <- read.csv("D:/Riko/semester 3/FSD/Linier,Logistic,Naive Bayes/ramen-ratings.csv")
data
library(mlbench)
data(PimaIndiansDiabetes)
data
data(PimaIndiansDiabetes)
data
data < -data(PimaIndiansDiabetes)
data <- data(PimaIndiansDiabetes)
data
head(PimaIndiansDiabetes)
#mengeset data
new_data <- subset(PimaIndiansDiabetes, select = c(glucose, pressure, mass, age, diabetes))
str(new_data)
#fitting model data naive bayes
Naive_Bayes_Models =  naiveBayes(diabetes~., data= new_data)
#fitting model data naive bayes
Naive_Bayes_Models =  naiveBayes(diabetes ~., data= new_data)
#fitting model data naive bayes
Naive_Bayes_Models =  naiveBayes()
#fitting model data naive bayes
install.packages("naivebayes")
library(naivebayes)
Naive_Bayes_Models =  naiveBayes(diabetes ~., data=new_data)
Naive_Bayes_Models = naive_bayes(diabetes ~., data = new_data)
Naive_Bayes_Models
library(mlbench)
data(PimaIndiansDiabetes)
head(PimaIndiansDiabetes)
#mengeset data
new_data <- subset(PimaIndiansDiabetes, select = c(glucose, pressure, mass, age, diabetes))
#fitting model data naive bayes
install.packages("naivebayes")
library(naivebayes)
Naive_Bayes_Models = naive_bayes(diabetes ~., data = new_data)
Naive_Bayes_Models
install.packages("naivebayes")
library(mlbench)
data(PimaIndiansDiabetes)
head(PimaIndiansDiabetes)
#mengeset data
new_data <- subset(PimaIndiansDiabetes, select = c(glucose, pressure, mass, age, diabetes))
#fitting model data naive bayes
library(naivebayes)
Naive_Bayes_Models = naive_bayes(diabetes ~., data = new_data)
Naive_Bayes_Models
install.packages("contrib")
